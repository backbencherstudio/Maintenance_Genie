// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  active
  inactive
  expired
  suspended
}


model Temp{
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  email      String   @unique
  otp        String   @unique
  expires_at DateTime
  is_verified Int?    @default(0) // 0 for not verified, 1 for verified

  @@map("temp")
}

enum Role {
  normal
  premium
  admin
}
enum Type {
 USER
 ADMIN
}
model User {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  email String  @unique
  name  String?
  password  String?
  customer_id String?
  country String?
  address String?
  gender String?
  status  Status @default(active)
  role    Role  @default(normal)
  type    Type@default(USER)
  date_of_birth DateTime? @db.Date
  city  String?
  phone_number String?
  avatar   String?
  state  String?
  postal_code String?
  bio    String?
  is_two_factor_enabled Int?    @default(0)
  two_factor_secret     String? // secret key for two factor authentication

  @@map("users")

  Subscription Subscription[]
}

enum Plan {
  HalfYearly
  Yearly
}
model Subscription {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  user_id    String
  plan       Plan
  start_date DateTime
  end_date   DateTime
  status     Status   @default(active)
  user       User     @relation(fields: [user_id], references: [id])

  @@map("subscriptions")
}